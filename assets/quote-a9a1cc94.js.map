{"version":3,"file":"quote-a9a1cc94.js","sources":["../../src/js/mobile-menu.js","../../src/js/navigation.js","../../src/api/controllers/core/AxiosResponseWrapper.js","../../src/api/controllers/core/AxiosProtocol.js","../../src/api/controllers/core/BaseController.js","../../src/api/controllers/ExercisesController.js","../../src/helpers/utils.js","../../src/helpers/locatStorage.js","../../src/js/quote.js"],"sourcesContent":["const mobileMenu = document.querySelector('.js-menu');\nconst openMenu = document.querySelector('.js-open-menu');\nconst closeMenu = document.querySelector('.js-close-menu');\n\nconst toggleMenu = () => {\n  const isMenuOpen = mobileMenu.classList.toggle('is-open');\n\n  document.body.style.overflow = isMenuOpen ? 'hidden' : '';\n};\n\nopenMenu.addEventListener('click', toggleMenu);\ncloseMenu.addEventListener('click', toggleMenu);\n\nwindow.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n  if (!e.matches) return;\n  mobileMenu.classList.remove('is-open');\n  document.body.style.overflow = '';\n});\n","document.addEventListener('DOMContentLoaded', event => {\n  let path = window.location.pathname;\n  const page =\n    path === '/' || path === '/enerGym/' ? 'index.html' : path.split('/').pop();\n\n  function setActiveLink(selector) {\n    let links = document.querySelectorAll(selector);\n\n    links.forEach(link => {\n      let href = link.getAttribute('href');\n\n      if (href.includes(page)) {\n        if (href.includes('index.html')) {\n          link.classList.add('active-home');\n        } else if (href.includes('favorites.html')) {\n          link.classList.add('active-favorites');\n        }\n      }\n    });\n  }\n\n  setActiveLink('.header-menu-link');\n  setActiveLink('.mobile-menu-link');\n});\n","export class AxiosResponseWrapper {\n  #response;\n\n  constructor(response) {\n    this.#response = response;\n  }\n\n  json() {\n    return JSON.parse(this.#response.data);\n  }\n}\n","import { Axios } from 'axios';\nimport { AxiosResponseWrapper } from './AxiosResponseWrapper';\n\nexport class AxiosProtocol {\n  axiosInstance;\n\n  constructor(baseUrl) {\n    const headers = {\n      accept: 'application/json',\n      'content-type': 'application/json',\n    };\n    this.axiosInstance = new Axios({\n      baseURL: baseUrl,\n      headers: { ...headers },\n    });\n  }\n\n  async get(endpoint, searchParams) {\n    const res = await this.axiosInstance.get(endpoint, searchParams);\n    return new AxiosResponseWrapper(res);\n  }\n\n  async patch(endpoint, params) {\n    const res = await this.axiosInstance.patch(endpoint, params);\n    return new AxiosResponseWrapper(res);\n  }\n\n  async post(endpoint, params) {\n    const res = await this.axiosInstance.post(endpoint, params);\n    return new AxiosResponseWrapper(res);\n  }\n}\n","import { AxiosProtocol } from './AxiosProtocol';\n\nexport class BaseController {\n  #baseUrl = 'https://energyflow.b.goit.study/api/';\n  #context = new AxiosProtocol(this.#baseUrl);\n\n  async get(endpoint, config = '') {\n    return config\n      ? await this.#context.get(endpoint, config)\n      : await this.#context.get(endpoint);\n  }\n\n  async patch(endpoint, config = '') {\n    return config\n      ? await this.#context.patch(endpoint, config)\n      : await this.#context.patch(endpoint);\n  }\n\n  async post(endpoint, config = '') {\n    return config\n      ? await this.#context.post(endpoint, config)\n      : await this.#context.post(endpoint);\n  }\n\n  setPathParameters(url, params) {\n    let path = url;\n    for (const key in params) {\n      path = path.replace(`{${key}}`, params[key]);\n    }\n    return path;\n  }\n}\n","import { BaseController } from './core/BaseController';\n\nexport class ExercisesController extends BaseController {\n  #API_GET_LIST_EXERCISES = 'filters';\n  #API_GET_LIST_SUB_EXERCISES = 'exercises';\n  #API_GET_EXERCISE = 'exercises/{exerciseID}';\n  #API_ADD_EXERCISE_RATING = 'exercises/{exerciseID}/rating';\n  #API_QUOTE = 'quote/';\n  #API_SUBSCRIPTION = 'subscription';\n\n  async init() {\n    const instance = new ExercisesController();\n    return instance;\n  }\n\n  async getListExercises(searchParams) {\n    return await this.get(this.#API_GET_LIST_EXERCISES, {\n      params: searchParams,\n    });\n  }\n\n  async getListExercisesBySubspecies(searchParams) {\n    return await this.get(this.#API_GET_LIST_SUB_EXERCISES, {\n      params: searchParams,\n    });\n  }\n\n  async getQuote() {\n    return await this.get(this.#API_QUOTE);\n  }\n\n  async getExerciseById(exerciseID) {\n    return await this.get(\n      this.setPathParameters(this.#API_GET_EXERCISE, { exerciseID })\n    );\n  }\n\n  async addRating(exerciseID, body) {\n    return await this.patch(\n      this.setPathParameters(this.#API_ADD_EXERCISE_RATING, { exerciseID }),\n      JSON.stringify(body)\n    );\n  }\n\n  async createSubscription(email) {\n    return await this.post(this.#API_SUBSCRIPTION, JSON.stringify(email));\n  }\n}\n","export function firstLetterToUpper(str) {\n  return str\n    .split(' ')\n    .map(m => m.charAt(0).toUpperCase() + m.slice(1).toLowerCase())\n    .join(' ');\n}\n\nexport function compareDateWithToday(timeStamp) {\n  return timeStamp === new Date().setHours(0, 0, 0, 0) ? true : false;\n}\n\nexport function setTime0(date) {\n  return new Date(date).setHours(0, 0, 0, 0);\n}\n","import { ExercisesController } from '../api/controllers/ExercisesController';\nimport { setTime0, compareDateWithToday } from './utils';\nconst exerciseCntrl = new ExercisesController();\nconst exercise = exerciseCntrl.init();\n\nexport const storageKeys = {\n  FAVORITE_EXERCISE: 'favorite-exercise',\n  QUOTE: 'quote',\n};\n\nexport function addExerciseToFavorite(\n  data,\n  storageKey = storageKeys.FAVORITE_EXERCISE\n) {\n  if (!localStorage.getItem(storageKey)) {\n    localStorage.setItem(storageKey, JSON.stringify([data]));\n  } else {\n    const localStorageArray = JSON.parse(localStorage.getItem(storageKey));\n    localStorageArray.push(data);\n    localStorage.setItem(storageKey, JSON.stringify(localStorageArray));\n  }\n}\n\nexport function removeExerciseFromFavoriteById(\n  exerciseId,\n  storageKey = storageKeys.FAVORITE_EXERCISE\n) {\n  if (!localStorage.getItem(storageKey)) return;\n\n  let lStorage = parseLocalStorageByKey(storageKey);\n  if (lStorage.length > 0) {\n    let updArray = lStorage.filter(s => {\n      return s._id !== exerciseId;\n    });\n    localStorage.setItem(storageKey, JSON.stringify(updArray));\n    if (updArray.length === 0) {\n      localStorage.removeItem(storageKey);\n    }\n  }\n}\n\nexport function getFavoritCardsFromLocalStorage(\n  storageKey = storageKeys.FAVORITE_EXERCISE\n) {\n  return parseLocalStorageByKey(storageKey);\n}\n\nexport function getFavoritCardFromLocalStorageById(\n  exerciseId,\n  storageKey = storageKeys.FAVORITE_EXERCISE\n) {\n  return parseLocalStorageByKey(storageKey).filter(c => {\n    return c._id === exerciseId;\n  })[0];\n}\n\nexport function isExerciseInFavorite(\n  exerciseId,\n  storageKey = storageKeys.FAVORITE_EXERCISE\n) {\n  if (!localStorage.getItem(storageKey)) return false;\n\n  let lStorage = parseLocalStorageByKey(storageKey);\n  if (lStorage.length > 0) {\n    const isExercise = lStorage.filter(s => {\n      return s._id === exerciseId;\n    });\n    return isExercise.length > 0 ? true : false;\n  } else {\n    return false;\n  }\n}\n\nasync function addQuoteToStorage() {\n  const quote = (await (await exercise).getQuote()).json();\n  quote.timeStamp = setTime0(new Date());\n  localStorage.setItem(storageKeys.QUOTE, JSON.stringify(quote));\n}\n\nexport async function getQuote() {\n  if (!localStorage.getItem(storageKeys.QUOTE)) {\n    await addQuoteToStorage();\n  } else {\n    const timeStampOldQuote = JSON.parse(\n      localStorage.getItem(storageKeys.QUOTE)\n    ).timeStamp;\n    if (!compareDateWithToday(timeStampOldQuote)) {\n      const newQuote = (await (await exercise).getQuote()).json();\n      newQuote.timeStamp = setTime0(new Date());\n      localStorage.setItem(storageKeys.QUOTE, JSON.stringify(newQuote));\n    }\n    const { author, quote } = JSON.parse(\n      localStorage.getItem(storageKeys.QUOTE)\n    );\n    return {\n      author,\n      quote,\n    };\n  }\n}\n\nfunction parseLocalStorageByKey(storageKey) {\n  try {\n    return JSON.parse(localStorage.getItem(storageKey));\n  } catch (error) {\n    console.error('Parsing Error');\n  }\n}\n","import { getQuote } from '../helpers/locatStorage.js';\nconst quoteContainerEl = document.querySelector('.favorites-info-container');\nconst quoteInfoEl = document.querySelector('.quote-info-content');\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  if (quoteInfoEl) {\n    try {\n      await getQuote();\n      quoteInfoEl.insertAdjacentHTML('beforeend', await renderFavoriteQuote());\n    } catch (error) {\n      console.error('Error fetching or updating the quote:', error);\n    }\n  } else if (quoteContainerEl) {\n    try {\n      await getQuote();\n      quoteContainerEl.insertAdjacentHTML(\n        'beforeend',\n        await renderFavoriteQuote()\n      );\n    } catch (error) {\n      console.error('Error fetching or updating the quote:', error);\n    }\n  }\n});\n\nasync function renderFavoriteQuote() {\n  const { author, quote } = await getQuote();\n  return `\n  <p id=\"favorites-text\">${quote}</p>\n  <h3 class=\"favorites-author\">${author}</h3>\n  `;\n}\n"],"names":["mobileMenu","openMenu","closeMenu","toggleMenu","isMenuOpen","e","event","path","page","setActiveLink","selector","link","href","AxiosResponseWrapper","response","__privateAdd","_response","__privateSet","__privateGet","AxiosProtocol","baseUrl","__publicField","headers","Axios","endpoint","searchParams","res","params","BaseController","_baseUrl","_context","config","url","key","_ExercisesController","_API_GET_LIST_EXERCISES","_API_GET_LIST_SUB_EXERCISES","_API_GET_EXERCISE","_API_ADD_EXERCISE_RATING","_API_QUOTE","_API_SUBSCRIPTION","exerciseID","body","email","ExercisesController","firstLetterToUpper","str","m","compareDateWithToday","timeStamp","setTime0","date","exerciseCntrl","exercise","storageKeys","removeExerciseFromFavoriteById","exerciseId","storageKey","lStorage","parseLocalStorageByKey","updArray","s","getFavoritCardsFromLocalStorage","isExerciseInFavorite","addQuoteToStorage","quote","getQuote","timeStampOldQuote","newQuote","author","quoteContainerEl","quoteInfoEl","renderFavoriteQuote","error"],"mappings":"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"}