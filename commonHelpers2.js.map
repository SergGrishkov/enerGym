{"version":3,"file":"commonHelpers2.js","sources":["../src/js/filters.js","../src/js/quote.js"],"sourcesContent":["import { firstLetterToUpper } from '../helpers/utils';\nconst filtersBox = document.querySelector('.filters-box');\nconst cardsContainer = document.getElementById('cards-list');\nconst defaultFilterButton = filtersBox.querySelector('.filters-list-item');\nconst defaultFilter = defaultFilterButton.dataset.filter;\n\nconst screenWidth = window.innerWidth;\n\nlet limit;\nlimitPerScreenWidth(screenWidth);\n\nconst defaultApiUrl = `https://energyflow.b.goit.study/api/filters?filter=${defaultFilter}&page=1&limit=${limit}`;\n\nfunction limitPerScreenWidth(screenWidth) {\n  if (screenWidth < 768) {\n    // Мобільний\n    limit = 8;\n  } else if (screenWidth >= 768 && screenWidth < 1024) {\n    // Планшет\n    limit = 12;\n  } else {\n    // Десктоп\n    limit = 12;\n  }\n  return limit;\n}\n\nasync function fetchDefaultApiUrl() {\n  try {\n    const response = await fetch(defaultApiUrl);\n    const data = await response.json();\n\n    if (data.results && data.results.length > 0) {\n      cardsContainer.innerHTML = renderCards(data.results);\n    } else {\n      console.error('No exercises found.');\n    }\n  } catch (error) {\n    console.error('Error fetching exercises:', error);\n  }\n}\n\nfunction togleActiveBtnClass(event) {\n  filtersBox.querySelectorAll('.filters-list-item').forEach(button => {\n    button.classList.remove('active_item');\n  });\n  event.target.classList.add('active_item');\n}\n\nasync function fetchDynamicApiUrl(event) {\n  if (event.target.classList.contains('filters-list-item')) {\n    togleActiveBtnClass(event);\n    const filter = event.target.dataset.filter;\n    const apiUrl = `https://energyflow.b.goit.study/api/filters?filter=${filter}&page=1&limit=${limit}`;\n\n    try {\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n\n      if (data.results && data.results.length > 0) {\n        cardsContainer.innerHTML = renderCards(data.results);\n      } else {\n        console.error('No exercises found.');\n      }\n    } catch (error) {\n      console.error('Error fetching exercises:', error);\n    }\n  }\n}\n\nfunction renderCards(exercises) {\n  return exercises.reduce(\n    (html, card) =>\n      html +\n      `<li class=\"cards-list-item\" style=\"background:linear-gradient(\n      0deg,\n      rgba(16, 16, 16, 0.7) 0%,\n      rgba(16, 16, 16, 0.7) 100%\n    ), url('${card.imgUrl}'),\n    lightgray -16.825px -9.156px / 128.765% 116.922% no-repeat; background-size: cover;\">\n      <h3 class=\"card-title\">${firstLetterToUpper(card.name)}</h3>\n      <p class=\"card-subtitle\">${card.filter}</p>\n    </li>`,\n    ''\n  );\n}\n\ndocument.addEventListener('DOMContentLoaded', fetchDefaultApiUrl);\nfiltersBox.addEventListener('click', fetchDynamicApiUrl);\n","// import { getQuote } from '../helpers/locatStorage.js'; \n\n// async function updateQuoteOfTheDay() {\n//   const quoteContainer = document.querySelector('.quote-info-content');\n//   const quoteTextElement = document.getElementById('quote-text');\n//   const authorElement = document.querySelector('.quote-author');\n\n//   try {\n//     const { author, quote } = await getQuote();\n\n//     quoteTextElement.textContent = quote;\n//     authorElement.textContent = `${author}`;\n\n//   } catch (error) {\n//     console.error('Error fetching or updating the quote:', error);\n//   }\n// }\n\n// updateQuoteOfTheDay();\n\nimport { getQuote } from '../helpers/locatStorage.js';\n\nasync function updateQuoteOfTheDay() {\n  const quoteContainer = document.querySelector('.quote-info-content');\n  const quoteTextElement = document.getElementById('quote-text');\n  const authorElement = document.querySelector('.quote-author');\n\n  try {\n    const { author, quote } = await getQuote();\n\n    quoteTextElement.textContent = quote;\n    authorElement.textContent = `${author}`;\n\n  } catch (error) {\n    console.error('Error fetching or updating the quote:', error);\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  updateQuoteOfTheDay();\n});\n"],"names":["filtersBox","cardsContainer","defaultFilterButton","defaultFilter","screenWidth","limit","limitPerScreenWidth","defaultApiUrl","fetchDefaultApiUrl","data","renderCards","error","togleActiveBtnClass","event","button","fetchDynamicApiUrl","apiUrl","exercises","html","card","firstLetterToUpper","updateQuoteOfTheDay","quoteTextElement","authorElement","author","quote","getQuote"],"mappings":"mGACA,MAAMA,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAiB,SAAS,eAAe,YAAY,EACrDC,EAAsBF,EAAW,cAAc,oBAAoB,EACnEG,EAAgBD,EAAoB,QAAQ,OAE5CE,EAAc,OAAO,WAE3B,IAAIC,EACJC,EAAoBF,CAAW,EAE/B,MAAMG,EAAgB,sDAAsDJ,CAAa,iBAAiBE,CAAK,GAE/G,SAASC,EAAoBF,EAAa,CACxC,OAAIA,EAAc,IAEhBC,EAAQ,GACCD,GAAe,KAAOA,EAAc,KAE7CC,EAAQ,IAKHA,CACT,CAEA,eAAeG,GAAqB,CAClC,GAAI,CAEF,MAAMC,EAAO,MADI,MAAM,MAAMF,CAAa,GACd,OAExBE,EAAK,SAAWA,EAAK,QAAQ,OAAS,EACxCR,EAAe,UAAYS,EAAYD,EAAK,OAAO,EAEnD,QAAQ,MAAM,qBAAqB,CAEtC,OAAQE,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,CACjD,CACH,CAEA,SAASC,EAAoBC,EAAO,CAClCb,EAAW,iBAAiB,oBAAoB,EAAE,QAAQc,GAAU,CAClEA,EAAO,UAAU,OAAO,aAAa,CACzC,CAAG,EACDD,EAAM,OAAO,UAAU,IAAI,aAAa,CAC1C,CAEA,eAAeE,EAAmBF,EAAO,CACvC,GAAIA,EAAM,OAAO,UAAU,SAAS,mBAAmB,EAAG,CACxDD,EAAoBC,CAAK,EAEzB,MAAMG,EAAS,sDADAH,EAAM,OAAO,QAAQ,MACuC,iBAAiBR,CAAK,GAEjG,GAAI,CAEF,MAAMI,EAAO,MADI,MAAM,MAAMO,CAAM,GACP,OAExBP,EAAK,SAAWA,EAAK,QAAQ,OAAS,EACxCR,EAAe,UAAYS,EAAYD,EAAK,OAAO,EAEnD,QAAQ,MAAM,qBAAqB,CAEtC,OAAQE,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,CACjD,CACF,CACH,CAEA,SAASD,EAAYO,EAAW,CAC9B,OAAOA,EAAU,OACf,CAACC,EAAMC,IACLD,EACA;AAAA;AAAA;AAAA;AAAA,cAIQC,EAAK,MAAM;AAAA;AAAA,+BAEMC,EAAmBD,EAAK,IAAI,CAAC;AAAA,iCAC3BA,EAAK,MAAM;AAAA,WAExC,EACJ,CACA,CAEA,SAAS,iBAAiB,mBAAoBX,CAAkB,EAChER,EAAW,iBAAiB,QAASe,CAAkB,EClEvD,eAAeM,GAAsB,CACZ,SAAS,cAAc,qBAAqB,EACnE,MAAMC,EAAmB,SAAS,eAAe,YAAY,EACvDC,EAAgB,SAAS,cAAc,eAAe,EAE5D,GAAI,CACF,KAAM,CAAE,OAAAC,EAAQ,MAAAC,GAAU,MAAMC,EAAQ,EAExCJ,EAAiB,YAAcG,EAC/BF,EAAc,YAAc,GAAGC,CAAM,EAEtC,OAAQb,EAAO,CACd,QAAQ,MAAM,wCAAyCA,CAAK,CAC7D,CACH,CAEA,SAAS,iBAAiB,mBAAoB,IAAM,CAClDU,GACF,CAAC"}